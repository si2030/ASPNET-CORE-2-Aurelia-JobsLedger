using JobsLedger.MODEL.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace JobsLedger.DATA.InitialData
{
    public static class TestDataDBInitializer
    {

    public static void Initialize(JobsLedgerAPIContext context)
        {
            InitializeClients(context);
            InitializeJobs(context);
            InitializeJobVisits(context);
        }

        private static void InitializeClients(JobsLedgerAPIContext context)
        {
            // Look for any clients.
            if (context.Clients.Any())
            {
                return;     // DB table data already created.
            }

            var clients = new Client[]
            {
                new Client { ClientNo = 1001, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Helen", ClientLastName = "Medina", Email = "hmedina0@dailymotion.com", CreatorId = 1, MobilePhone = "0484284912", Phone = "0354417370", Notes = "Great client to deal with", Address1 = "055 Pepper Wood Park", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Eaglehawk" && a.StateId == 2).Id, Abn = "", BankName = "ANZ", BankBSB = "013-104", BankAccount = "7564670585", Active = true, Activity = true, DateCreated = new DateTime(2016, 12, 17) },
                new Client { ClientNo = 1002, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Martha", ClientLastName = "Scott", Email = "mscott1@virginia.edu", CreatorId = 1, MobilePhone = "0411201646", Phone = "0354459684", Notes = "", Address1 = "28 Coleman Pass", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "", BankName = "ANZ", BankBSB = "013-622", BankAccount = "9495056340", Active = true, Activity = true, DateCreated = new DateTime(2016, 12, 19) },
                new Client { ClientNo = 1003, Company = true, CompanyName = "BEKO Pty Ltd", IsWarrantyCompany = true, RequiresPartsPayment = true, ClientFirstName = "Sandro", ClientLastName = "Senise", Email = "sandro.Senise@bekoau.com", CreatorId = 1, MobilePhone = "0496261595", Phone = "0354489690", Notes = "Premier company for the business. Priotise jobs with them", Address1 = "85846 Steensland Road", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Lockwood" && a.StateId == 2).Id, Abn = "49152055162", BankName = "ANZ", BankBSB = "013-677", BankAccount = "8861569314", Active = true, Activity = true, DateCreated = new DateTime(2016, 12, 19) },
                new Client { ClientNo = 1004, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Kathryn", ClientLastName = "Ortiz", Email = "kortiz3@cisco.com", CreatorId = 1, MobilePhone = "0422724499", Phone = "0354443620", Notes = "", Address1 = "646 Kropf Way", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Strathfieldsaye" && a.StateId == 2).Id, Abn = "", BankName = "WESTPAC", BankBSB = "033-648", BankAccount = "8237479726", Active = true, Activity = true, DateCreated = new DateTime(2016, 12, 26) },
                new Client { ClientNo = 1005, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Charles", ClientLastName = "Cunningham", Email = "ccunningham4@ifeng.com", CreatorId = 1, MobilePhone = "0460410199", Phone = "0354439531", Notes = "", Address1 = "9327 Kropf Lane", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "", BankName = "CBA", BankBSB = "063-426", BankAccount = "6460598758", Active = true, Activity = true, DateCreated = new DateTime(2016, 12, 30) },
                new Client { ClientNo = 1006, Company = true, CompanyName = "Fisher & Paykel Pty Ltd", IsWarrantyCompany = true, RequiresPartsPayment = false, ClientFirstName = "Eugene", ClientLastName = "Mills", Email = "emills5@statcounter.com", CreatorId = 1, MobilePhone = "0481522860", Phone = "0354493027", Notes = "", Address1 = "82647 Leroy Junction", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "87393050519", BankName = "ANZ", BankBSB = "013-403", BankAccount = "1587511692", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 1) },
                new Client { ClientNo = 1007, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Joseph", ClientLastName = "Chavez", Email = "jchavez6@myspace.com", CreatorId = 1, MobilePhone = "0493942835", Phone = "0354498448", Notes = "", Address1 = "8 Nova Pass", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "White Hills" && a.StateId == 2).Id, Abn = "", BankName = "CBA", BankBSB = "063-234", BankAccount = "2853418157", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 8) },
                new Client { ClientNo = 1008, Company = true, CompanyName = "Alantine Pty Ltd", IsWarrantyCompany = true, RequiresPartsPayment = false, ClientFirstName = "Gloria", ClientLastName = "Knight", Email = "gknight7@google.com.br", CreatorId = 1, MobilePhone = "0473931895", Phone = "0354480798", Notes = "", Address1 = "75928 Dorton Road", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "16152698256", BankName = "NAB", BankBSB = "083-979", BankAccount = "9679174625", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 9) },
                new Client { ClientNo = 1009, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Willie", ClientLastName = "Ellis", Email = "wellis8@mysql.com", CreatorId = 1, MobilePhone = "0401973721", Phone = "0354453759", Notes = "", Address1 = "142 Gale Pass", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "", BankName = "NAB", BankBSB = "083-755", BankAccount = "5575247133", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 9) },
                new Client { ClientNo = 1010, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Anna", ClientLastName = "Smith", Email = "asmith9@foxnews.com", CreatorId = 1, MobilePhone = "0473660897", Phone = "0354411012", Notes = "", Address1 = "2887 Myrtle Junction", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "", BankName = "WESTPAC", BankBSB = "033-832", BankAccount = "2198371160", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 10) },
                new Client { ClientNo = 1011, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Patricia", ClientLastName = "Bailey", Email = "pbaileya@stumbleupon.com", CreatorId = 1, MobilePhone = "0403635413", Phone = "0354439792", Notes = "", Address1 = "9 Lake View Circle", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "", BankName = "NAB", BankBSB = "083-327", BankAccount = "8719395565", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 16) },
                new Client { ClientNo = 1012, Company = true, CompanyName = "Home Appliances Pty Ltd", IsWarrantyCompany = true, RequiresPartsPayment = false, ClientFirstName = "Carl", ClientLastName = "Fowler", Email = "cfowlerb@ifeng.com", CreatorId = 1, MobilePhone = "0487455839", Phone = "0354417651", Notes = "", Address1 = "147 American Ash Plaza", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "53137363038", BankName = "NAB", BankBSB = "083-540", BankAccount = "2826226622", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 25) },
                new Client { ClientNo = 1013, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Phillip", ClientLastName = "Howell", Email = "phowellc@yelp.com", CreatorId = 1, MobilePhone = "0456094824", Phone = "0354496510", Notes = "", Address1 = "9 Swallow Point", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Eaglehawk" && a.StateId == 2).Id, Abn = "", BankName = "CBA", BankBSB = "063-286", BankAccount = "2601908175", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 25) },
                new Client { ClientNo = 1014, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Joyce", ClientLastName = "Schmidt", Email = "jschmidtd@hhs.gov", CreatorId = 1, MobilePhone = "0493980077", Phone = "0354465010", Notes = "Client is difficult to understand", Address1 = "42390 La Follette Avenue", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "White Hills" && a.StateId == 2).Id, Abn = "", BankName = "NAB", BankBSB = "083-472", BankAccount = "8874409298", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 28) },
                new Client { ClientNo = 1015, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Betty", ClientLastName = "Robertson", Email = "brobertsone@delicious.com", CreatorId = 1, MobilePhone = "0443049081", Phone = "0354458564", Notes = "", Address1 = "19418 Jay Alley", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "White Hills" && a.StateId == 2).Id, Abn = "", BankName = "WESTPAC", BankBSB = "033-460", BankAccount = "3650586162", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 29) },
                new Client { ClientNo = 1016, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Jeremy", ClientLastName = "Olson", Email = "jolsonf@youtu.be", CreatorId = 1, MobilePhone = "0478709626", Phone = "0354478105", Notes = "", Address1 = "36592 Dawn Point", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Eaglehawk" && a.StateId == 2).Id, Abn = "", BankName = "CBA", BankBSB = "063-430", BankAccount = "7614712652", Active = true, Activity = true, DateCreated = new DateTime(2017, 1, 30) },
                new Client { ClientNo = 1017, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Dorothy", ClientLastName = "Foster", Email = "dfosterg@trellian.com", CreatorId = 1, MobilePhone = "0490210197", Phone = "0354493197", Notes = "", Address1 = "826 Arapahoe Place", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "", BankName = "WESTPAC", BankBSB = "033-690", BankAccount = "9751565358", Active = true, Activity = true, DateCreated = new DateTime(2017, 2, 1) },
                new Client { ClientNo = 1018, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Roger", ClientLastName = "Perry", Email = "rperryh@xrea.com", CreatorId = 1, MobilePhone = "0436339894", Phone = "0354492111", Notes = "", Address1 = "86 Di Loreto Avenue", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Bendigo" && a.StateId == 2).Id, Abn = "", BankName = "WESTPAC", BankBSB = "033-292", BankAccount = "6631346734", Active = true, Activity = true, DateCreated = new DateTime(2017, 2, 10) },
                new Client { ClientNo = 1019, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Jerry", ClientLastName = "Grant", Email = "jgranti@wiley.com", CreatorId = 1, MobilePhone = "0427113205", Phone = "0354485912", Notes = "", Address1 = "5 Briar Crest Pass", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Eaglehawk" && a.StateId == 2).Id, Abn = "", BankName = "ANZ", BankBSB = "013-141", BankAccount = "8008128546", Active = true, Activity = true, DateCreated = new DateTime(2017, 2, 15) },
                new Client { ClientNo = 1020, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Dorothy", ClientLastName = "Bryant", Email = "dbryantj@comsenz.com", CreatorId = 1, MobilePhone = "0464163491", Phone = "0354491552", Notes = "", Address1 = "6066 Florence Center", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "White Hills" && a.StateId == 2).Id, Abn = "", BankName = "ANZ", BankBSB = "013-404", BankAccount = "7263411833", Active = true, Activity = true, DateCreated = new DateTime(2017, 2, 17) },
                new Client { ClientNo = 1021, Company = false, CompanyName = "", IsWarrantyCompany = false, RequiresPartsPayment = false, ClientFirstName = "Pamela", ClientLastName = "Riley", Email = "prileyk@eepurl.com", CreatorId = 1, MobilePhone = "0490547720", Phone = "0354479488", Notes = "", Address1 = "0 Bobwhite Lane", Address2 = "", SuburbId = context.Suburb.FirstOrDefault(a => a.SuburbName == "Strathfieldsaye" && a.StateId == 2).Id, Abn = "", BankName = "ANZ", BankBSB = "013-771", BankAccount = "9536314525", Active = true, Activity = true, DateCreated = new DateTime(2017, 2, 21) }
            };

            foreach (Client c in clients)
            {
                context.Clients.Add(c);
            }

                var clientCount = context.Set<Client>().Count();

                var clientcounter = context.ProgramCounters.Where(c => c.Name == "ClientNo").FirstOrDefault<ProgramCounter>();

                clientcounter.Value = clientcounter.Value + clientCount + 1;

                context.SaveChanges();
        }

        private static void InitializeJobs(JobsLedgerAPIContext context)
        {
            // Now look for any jobs.
            if (context.Jobs.Any())
            {
                return;     // DB table data already created.
            }

            var jobs = new Job[]
            {
                new Job { ClientId = 1, JobNo = 1501, AgentJobNo = "220081", JobTypeId = 1, WarrantyCompany = "Alantine Pty Ltd", StatusId = 8, BrandId = 3, CreatorId = 1, Model = "CX-9086621", Serial = "15845608", ProblemDetails = "Cras pellentesque volutpat dui.", SolutionDetails = "Nullam sit amet turpis elementum ligula vehicula consequat.", Notes = "Nullam sit amet turpis elementum ligula vehicula consequat.", DateCreated = new DateTime(2016, 12, 17) },
                new Job { ClientId = 1, JobNo = 1502, AgentJobNo = "218813", JobTypeId = 3, WarrantyCompany = "Alantine Pty Ltd", StatusId = 8, BrandId = 3, CreatorId = 1, Model = "IC-8414599", Serial = "15505324", ProblemDetails = "Nullam molestie nibh in lectus. Pellentesque at nulla.", SolutionDetails = "Nullam varius.", Notes = "", DateCreated = new DateTime(2017, 1, 6) },
                new Job { ClientId = 1, JobNo = 1503, AgentJobNo = "27126", JobTypeId = 5, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "XF-5663981", Serial = "15328540", ProblemDetails = "Aenean fermentum. Donec ut mauris eget massa tempor convallis.", SolutionDetails = "In hac habitasse platea dictumst. Morbi vestibulum, velit id pretium iaculis, diam erat fermentum justo, nec condimentum neque sapien placerat ante.", Notes = "In hac habitasse platea dictumst. Morbi vestibulum, velit id pretium iaculis, diam erat fermentum justo, nec condimentum neque sapien placerat ante.", DateCreated = new DateTime(2017, 2, 21) },
                new Job { ClientId = 2, JobNo = 1504, AgentJobNo = "CA256062", JobTypeId = 1, WarrantyCompany = "Home Appliances Pty Ltd", StatusId = 8, BrandId = 2, CreatorId = 1, Model = "SX-3449491", Serial = "15527741", ProblemDetails = "Donec dapibus.", SolutionDetails = "Sed accumsan felis. Ut at dolor quis odio consequat varius.", Notes = "", DateCreated = new DateTime(2016, 12, 26) },
                new Job { ClientId = 3, JobNo = 1505, AgentJobNo = "27221", JobTypeId = 11, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "JL-8175148", Serial = "15124049", ProblemDetails = "Donec posuere metus vitae ipsum. Aliquam non mauris.", SolutionDetails = "Morbi a ipsum.", Notes = "Morbi a ipsum.", DateCreated = new DateTime(2017, 1, 28) },
                new Job { ClientId = 3, JobNo = 1506, AgentJobNo = "", JobTypeId = 1, WarrantyCompany = "", StatusId = 8, BrandId = 4, CreatorId = 1, Model = "QK-2291955", Serial = "15522477", ProblemDetails = "Morbi sem mauris, laoreet ut, rhoncus aliquet, pulvinar sed, nisl.", SolutionDetails = "Maecenas ut massa quis augue luctus tincidunt. Nulla mollis molestie lorem.", Notes = "Maecenas ut massa quis augue luctus tincidunt. Nulla mollis molestie lorem.", DateCreated = new DateTime(2017, 2, 15) },
                new Job { ClientId = 4, JobNo = 1507, AgentJobNo = "", JobTypeId = 1, WarrantyCompany = "", StatusId = 8, BrandId = 4, CreatorId = 1, Model = "RX-9988754", Serial = "15072455", ProblemDetails = "Nam congue, risus semper porta volutpat, quam pede lobortis ligula, sit amet eleifend pede libero quis orci. Nullam molestie nibh in lectus.", SolutionDetails = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit.", Notes = "", DateCreated = new DateTime(2017, 1, 2) },
                new Job { ClientId = 5, JobNo = 1508, AgentJobNo = "", JobTypeId = 1, WarrantyCompany = "", StatusId = 8, BrandId = 4, CreatorId = 1, Model = "WP-6629159", Serial = "15359982", ProblemDetails = "Donec quis orci eget orci vehicula condimentum. Curabitur in libero ut massa volutpat convallis.", SolutionDetails = "Duis mattis egestas metus. Aenean fermentum.", Notes = "", DateCreated = new DateTime(2017, 1, 8) },
                new Job { ClientId = 6, JobNo = 1509, AgentJobNo = "27236", JobTypeId = 5, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "PB-2056296", Serial = "15419226", ProblemDetails = "Nulla neque libero, convallis eget, eleifend luctus, ultricies eu, nibh.", SolutionDetails = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin risus.", Notes = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin risus.", DateCreated = new DateTime(2017, 1, 9) },
                new Job { ClientId = 7, JobNo = 1510, AgentJobNo = "27365", JobTypeId = 7, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "MB-5755281", Serial = "15625721", ProblemDetails = "Fusce congue, diam id ornare imperdiet, sapien urna pretium nisl, ut volutpat sapien arcu sed augue.", SolutionDetails = "Quisque ut erat.", Notes = "Quisque ut erat.", DateCreated = new DateTime(2017, 1, 9) },
                new Job { ClientId = 8, JobNo = 1511, AgentJobNo = "CA257901", JobTypeId = 3, WarrantyCompany = "Home Appliances Pty Ltd", StatusId = 8, BrandId = 2, CreatorId = 1, Model = "SI-2407880", Serial = "15279076", ProblemDetails = "Morbi quis tortor id nulla ultrices aliquet. Maecenas leo odio, condimentum id, luctus nec, molestie sed, justo.", SolutionDetails = "Cras non velit nec nisi vulputate nonummy.", Notes = "", DateCreated = new DateTime(2017, 1, 10) },
                new Job { ClientId = 9, JobNo = 1512, AgentJobNo = "27398", JobTypeId = 5, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "ND-1216413", Serial = "15225965", ProblemDetails = "Aenean fermentum. Donec ut mauris eget massa tempor convallis.", SolutionDetails = "Nam nulla. Integer pede justo, lacinia eget, tincidunt eget, tempus vel, pede.", Notes = "", DateCreated = new DateTime(2017, 1, 16) },
                new Job { ClientId = 10, JobNo = 1513, AgentJobNo = "", JobTypeId = 1, WarrantyCompany = "", StatusId = 8, BrandId = 4, CreatorId = 1, Model = "KF-3830092", Serial = "15990976", ProblemDetails = "Aenean fermentum.", SolutionDetails = "Praesent id massa id nisl venenatis lacinia. Aenean sit amet justo.", Notes = "", DateCreated = new DateTime(2017, 1, 25) },
                new Job { ClientId = 11, JobNo = 1514, AgentJobNo = "", JobTypeId = 1, WarrantyCompany = "", StatusId = 8, BrandId = 4, CreatorId = 1, Model = "WB-2122039", Serial = "15782004", ProblemDetails = "Praesent blandit. Nam nulla.", SolutionDetails = "Donec quis orci eget orci vehicula condimentum. Curabitur in libero ut massa volutpat convallis.", Notes = "", DateCreated = new DateTime(2017, 1, 25) },
                new Job { ClientId = 12, JobNo = 1515, AgentJobNo = "27465", JobTypeId = 1, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "FP-1317706", Serial = "15427469", ProblemDetails = "Morbi sem mauris, laoreet ut, rhoncus aliquet, pulvinar sed, nisl.", SolutionDetails = "Nullam orci pede, venenatis non, sodales sed, tincidunt eu, felis. Fusce posuere felis sed lacus.", Notes = "", DateCreated = new DateTime(2017, 1, 28) },
                new Job { ClientId = 13, JobNo = 1516, AgentJobNo = "27569", JobTypeId = 5, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "BC-8782590", Serial = "15362736", ProblemDetails = "Integer aliquet, massa id lobortis convallis, tortor risus dapibus augue, vel accumsan tellus nisi eu orci.", SolutionDetails = "Praesent blandit.", Notes = "Praesent blandit.", DateCreated = new DateTime(2017, 1, 29) },
                new Job { ClientId = 14, JobNo = 1517, AgentJobNo = "221003", JobTypeId = 3, WarrantyCompany = "Alantine Pty Ltd", StatusId = 8, BrandId = 3, CreatorId = 1, Model = "SY-9675726", Serial = "15913641", ProblemDetails = "Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.", SolutionDetails = "Aliquam quis turpis eget elit sodales scelerisque. Mauris sit amet eros.", Notes = "", DateCreated = new DateTime(2017, 1, 30) },
                new Job { ClientId = 15, JobNo = 1518, AgentJobNo = "27599", JobTypeId = 7, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "KT-6988982", Serial = "15139207", ProblemDetails = "Maecenas tincidunt lacus at velit. Vivamus vel nulla eget eros elementum pellentesque.", SolutionDetails = "In congue.", Notes = "", DateCreated = new DateTime(2017, 2, 1) },
                new Job { ClientId = 16, JobNo = 1519, AgentJobNo = "27659", JobTypeId = 11, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "RZ-6156715", Serial = "15836737", ProblemDetails = "Proin at turpis a pede posuere nonummy.", SolutionDetails = "Maecenas tristique, est et tempus semper, est quam pharetra magna, ac consequat metus sapien ut nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam.", Notes = "Maecenas tristique, est et tempus semper, est quam pharetra magna, ac consequat metus sapien ut nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam.", DateCreated = new DateTime(2017, 2, 3) },
                new Job { ClientId = 17, JobNo = 1520, AgentJobNo = "CA253723", JobTypeId = 1, WarrantyCompany = "Home Appliances Pty Ltd", StatusId = 8, BrandId = 2, CreatorId = 1, Model = "FV-3262153", Serial = "15672077", ProblemDetails = "Curabitur at ipsum ac tellus semper interdum.", SolutionDetails = "Morbi sem mauris, laoreet ut, rhoncus aliquet, pulvinar sed, nisl. Nunc rhoncus dui vel sem.", Notes = "Morbi sem mauris, laoreet ut, rhoncus aliquet, pulvinar sed, nisl. Nunc rhoncus dui vel sem.", DateCreated = new DateTime(2017, 2, 3) },
                new Job { ClientId = 18, JobNo = 1521, AgentJobNo = "222056", JobTypeId = 1, WarrantyCompany = "Alantine Pty Ltd", StatusId = 8, BrandId = 3, CreatorId = 1, Model = "DE-7516102", Serial = "15902540", ProblemDetails = "Nam ultrices, libero non mattis pulvinar, nulla pede ullamcorper augue, a suscipit nulla elit ac nulla.", SolutionDetails = "Curabitur at ipsum ac tellus semper interdum.", Notes = "", DateCreated = new DateTime(2017, 2, 4) },
                new Job { ClientId = 19, JobNo = 1522, AgentJobNo = "226985", JobTypeId = 1, WarrantyCompany = "Alantine Pty Ltd", StatusId = 8, BrandId = 3, CreatorId = 1, Model = "MB-5755281", Serial = "15625721", ProblemDetails = "Fusce congue, diam id ornare imperdiet, sapien urna pretium nisl, ut volutpat sapien arcu sed augue.", SolutionDetails = "Duis mattis egestas metus. Aenean fermentum.", Notes = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit.", DateCreated = new DateTime(2017, 2, 6) },
                new Job { ClientId = 20, JobNo = 1523, AgentJobNo = "27631", JobTypeId = 11, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "SI-2407880", Serial = "15279076", ProblemDetails = "Morbi quis tortor id nulla ultrices aliquet. Maecenas leo odio, condimentum id, luctus nec, molestie sed, justo.", SolutionDetails = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin risus.", Notes = "Duis mattis egestas metus. Aenean fermentum.", DateCreated = new DateTime(2017, 2, 8) },
                new Job { ClientId = 21, JobNo = 1524, AgentJobNo = "27712", JobTypeId = 7, WarrantyCompany = "BEKO Pty Ltd", StatusId = 8, BrandId = 1, CreatorId = 1, Model = "ND-1216413", Serial = "15225965", ProblemDetails = "Aenean fermentum. Donec ut mauris eget massa tempor convallis.", SolutionDetails = "Quisque ut erat.", Notes = "", DateCreated = new DateTime(2017, 2, 10) }
            };

            foreach (Job j in jobs)
            {
                context.Jobs.Add(j);
            }

                var jobCount = context.Set<Job>().Count();

                var jobcounter = context.ProgramCounters.Where(c => c.Name == "JobNo").FirstOrDefault<ProgramCounter>();

                jobcounter.Value = jobcounter.Value + jobCount + 1;

                context.SaveChanges();
            }

        private static void InitializeJobVisits(JobsLedgerAPIContext context)
        {
            // Look for any JobVisits.
            if (context.JobVisits.Any())
            {
                return;     // //DB table data already created.
            }
            var jobVisits = new JobVisit[]
            {
                new JobVisit { JobId = 1, DateCreated = new DateTime(2016, 12, 17), VisitDate = new DateTime(2016, 12, 18), StartTime = new DateTime(2016, 12, 18, 10, 0, 0), EndTime = new DateTime(2016, 12, 18, 11, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 1, DateCreated = new DateTime(2016, 12, 24), VisitDate = new DateTime(2016, 12, 25), StartTime = new DateTime(2016, 12, 25, 9, 0, 0), EndTime = new DateTime(2016, 12, 25, 10, 0, 0), Notes = "Nullam sit amet turpis elementum ligula vehicula consequat.", JobVisitTypeId = 2 },
                new JobVisit { JobId = 2, DateCreated = new DateTime(2017, 1, 6), VisitDate = new DateTime(2017, 1, 7), StartTime = new DateTime(2017, 1, 7, 13, 0, 0), EndTime = new DateTime(2017, 1, 7, 14, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 2, DateCreated = new DateTime(2017, 1, 13), VisitDate = new DateTime(2017, 1, 14), StartTime = new DateTime(2017, 1, 14, 15, 0, 0), EndTime = new DateTime(2017, 1, 14, 16, 0, 0), Notes = "In hac habitasse platea dictumst. Morbi vestibulum, velit id pretium iaculis, diam erat fermentum justo, nec condimentum neque sapien placerat ante.", JobVisitTypeId = 2 },
                new JobVisit { JobId = 3, DateCreated = new DateTime(2017, 2, 21), VisitDate = new DateTime(2017, 2, 22), StartTime = new DateTime(2017, 2, 22, 16, 0, 0), EndTime = new DateTime(2017, 2, 22, 17, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 4, DateCreated = new DateTime(2016, 12, 26), VisitDate = new DateTime(2016, 12, 27), StartTime = new DateTime(2016, 12, 27, 12, 0, 0), EndTime = new DateTime(2016, 12, 27, 13, 0, 0), Notes = "Morbi a ipsum.", JobVisitTypeId = 1 },
                new JobVisit { JobId = 4, DateCreated = new DateTime(2016, 12, 27), VisitDate = new DateTime(2016, 12, 28), StartTime = new DateTime(2016, 12, 28, 13, 0, 0), EndTime = new DateTime(2016, 12, 28, 14, 0, 0), Notes = "Maecenas ut massa quis augue luctus tincidunt. Nulla mollis molestie lorem.", JobVisitTypeId = 2 },
                new JobVisit { JobId = 5, DateCreated = new DateTime(2017, 1, 27), VisitDate = new DateTime(2017, 1, 28), StartTime = new DateTime(2017, 1, 28, 11, 0, 0), EndTime = new DateTime(2017, 1, 28, 12, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 5, DateCreated = new DateTime(2017, 1, 26), VisitDate = new DateTime(2017, 1, 27), StartTime = new DateTime(2017, 1, 27, 10, 0, 0), EndTime = new DateTime(2017, 1, 27, 11, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 6, DateCreated = new DateTime(2017, 2, 15), VisitDate = new DateTime(2017, 2, 16), StartTime = new DateTime(2017, 2, 16, 14, 0, 0), EndTime = new DateTime(2017, 2, 16, 15, 0, 0), Notes = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin risus.", JobVisitTypeId = 1 },
                new JobVisit { JobId = 6, DateCreated = new DateTime(2017, 2, 15), VisitDate = new DateTime(2017, 2, 16), StartTime = new DateTime(2017, 2, 16, 9, 0, 0), EndTime = new DateTime(2017, 2, 16, 10, 0, 0), Notes = "Quisque ut erat.", JobVisitTypeId = 2 },
                new JobVisit { JobId = 7, DateCreated = new DateTime(2017, 1, 2), VisitDate = new DateTime(2017, 1, 3), StartTime = new DateTime(2017, 1, 3, 11, 0, 0), EndTime = new DateTime(2017, 1, 3, 12, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 7, DateCreated = new DateTime(2017, 1, 6), VisitDate = new DateTime(2017, 1, 7), StartTime = new DateTime(2017, 1, 7, 13, 0, 0), EndTime = new DateTime(2017, 1, 7, 14, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 8, DateCreated = new DateTime(2017, 1, 8), VisitDate = new DateTime(2017, 1, 9), StartTime = new DateTime(2017, 1, 9, 15, 0, 0), EndTime = new DateTime(2017, 1, 9, 16, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 8, DateCreated = new DateTime(2017, 1, 12), VisitDate = new DateTime(2017, 1, 13), StartTime = new DateTime(2017, 1, 13, 14, 0, 0), EndTime = new DateTime(2017, 1, 13, 15, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 9, DateCreated = new DateTime(2017, 1, 9), VisitDate = new DateTime(2017, 1, 10), StartTime = new DateTime(2017, 1, 10, 16, 0, 0), EndTime = new DateTime(2017, 1, 10, 17, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 9, DateCreated = new DateTime(2017, 1, 16), VisitDate = new DateTime(2017, 1, 17), StartTime = new DateTime(2017, 1, 17, 12, 0, 0), EndTime = new DateTime(2017, 1, 17, 13, 0, 0), Notes = "Praesent blandit.", JobVisitTypeId = 2 },
                new JobVisit { JobId = 10, DateCreated = new DateTime(2017, 1, 9), VisitDate = new DateTime(2017, 1, 10), StartTime = new DateTime(2017, 1, 10, 9, 0, 0), EndTime = new DateTime(2017, 1, 10, 10, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 10, DateCreated = new DateTime(2017, 1, 14), VisitDate = new DateTime(2017, 1, 15), StartTime = new DateTime(2017, 1, 15, 14, 0, 0), EndTime = new DateTime(2017, 1, 15, 15, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 11, DateCreated = new DateTime(2017, 1, 10), VisitDate = new DateTime(2017, 1, 11), StartTime = new DateTime(2017, 1, 11, 11, 0, 0), EndTime = new DateTime(2017, 1, 11, 12, 0, 0), Notes = "Maecenas tristique, est et tempus semper, est quam pharetra magna, ac consequat metus sapien ut nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam.", JobVisitTypeId = 1 },
                new JobVisit { JobId = 11, DateCreated = new DateTime(2017, 1, 17), VisitDate = new DateTime(2017, 1, 18), StartTime = new DateTime(2017, 1, 18, 10, 0, 0), EndTime = new DateTime(2017, 1, 18, 11, 0, 0), Notes = "Morbi sem mauris, laoreet ut, rhoncus aliquet, pulvinar sed, nisl. Nunc rhoncus dui vel sem.", JobVisitTypeId = 2 },
                new JobVisit { JobId = 12, DateCreated = new DateTime(2017, 1, 16), VisitDate = new DateTime(2017, 1, 17), StartTime = new DateTime(2017, 1, 17, 15, 0, 0), EndTime = new DateTime(2017, 1, 17, 16, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 12, DateCreated = new DateTime(2017, 1, 19), VisitDate = new DateTime(2017, 1, 20), StartTime = new DateTime(2017, 1, 20, 14, 0, 0), EndTime = new DateTime(2017, 1, 20, 15, 0, 0), Notes = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit.", JobVisitTypeId = 2 },
                new JobVisit { JobId = 13, DateCreated = new DateTime(2017, 1, 25), VisitDate = new DateTime(2017, 1, 26), StartTime = new DateTime(2017, 1, 26, 10, 0, 0), EndTime = new DateTime(2017, 1, 26, 11, 0, 0), Notes = "Duis mattis egestas metus. Aenean fermentum.", JobVisitTypeId = 1 },
                new JobVisit { JobId = 13, DateCreated = new DateTime(2017, 1, 29), VisitDate = new DateTime(2017, 1, 30), StartTime = new DateTime(2017, 1, 30, 13, 0, 0), EndTime = new DateTime(2017, 1, 30, 14, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 14, DateCreated = new DateTime(2017, 1, 25), VisitDate = new DateTime(2017, 1, 26), StartTime = new DateTime(2017, 1, 26, 15, 0, 0), EndTime = new DateTime(2017, 1, 26, 16, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 15, DateCreated = new DateTime(2017, 1, 28), VisitDate = new DateTime(2017, 1, 29), StartTime = new DateTime(2017, 1, 29, 12, 0, 0), EndTime = new DateTime(2017, 1, 29, 13, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 15, DateCreated = new DateTime(2017, 2, 3), VisitDate = new DateTime(2017, 2, 4), StartTime = new DateTime(2017, 2, 4, 14, 0, 0), EndTime = new DateTime(2017, 2, 4, 15, 0, 0), Notes = "Praesent id massa id nisl venenatis lacinia. Aenean sit amet justo.", JobVisitTypeId = 2 },
                new JobVisit { JobId = 16, DateCreated = new DateTime(2017, 1, 29), VisitDate = new DateTime(2017, 1, 29), StartTime = new DateTime(2017, 1, 29, 16, 0, 0), EndTime = new DateTime(2017, 1, 29, 17, 0, 0), Notes = "Donec quis orci eget orci vehicula condimentum. Curabitur in libero ut massa volutpat convallis.", JobVisitTypeId = 1 },
                new JobVisit { JobId = 16, DateCreated = new DateTime(2017, 2, 5), VisitDate = new DateTime(2017, 2, 6), StartTime = new DateTime(2017, 2, 6, 10, 0, 0), EndTime = new DateTime(2017, 2, 6, 11, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 17, DateCreated = new DateTime(2017, 1, 30), VisitDate = new DateTime(2017, 1, 31), StartTime = new DateTime(2017, 1, 31, 9, 0, 0), EndTime = new DateTime(2017, 1, 31, 10, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 18, DateCreated = new DateTime(2017, 2, 1), VisitDate = new DateTime(2017, 2, 2), StartTime = new DateTime(2017, 2, 2, 11, 0, 0), EndTime = new DateTime(2017, 2, 2, 12, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 18, DateCreated = new DateTime(2017, 2, 6), VisitDate = new DateTime(2017, 2, 7), StartTime = new DateTime(2017, 2, 7, 12, 0, 0), EndTime = new DateTime(2017, 2, 7, 13, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 19, DateCreated = new DateTime(2017, 2, 3), VisitDate = new DateTime(2017, 2, 4), StartTime = new DateTime(2017, 2, 4, 13, 0, 0), EndTime = new DateTime(2017, 2, 4, 14, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 19, DateCreated = new DateTime(2017, 2, 8), VisitDate = new DateTime(2017, 2, 9), StartTime = new DateTime(2017, 2, 9, 10, 0, 0), EndTime = new DateTime(2017, 2, 9, 11, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 20, DateCreated = new DateTime(2017, 2, 3), VisitDate = new DateTime(2017, 2, 4), StartTime = new DateTime(2017, 2, 4, 15, 0, 0), EndTime = new DateTime(2017, 2, 4, 16, 0, 0), Notes = "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin risus.", JobVisitTypeId = 1 },
                new JobVisit { JobId = 20, DateCreated = new DateTime(2017, 2, 7), VisitDate = new DateTime(2017, 2, 8), StartTime = new DateTime(2017, 2, 8, 10, 0, 0), EndTime = new DateTime(2017, 2, 8, 11, 0, 0), Notes = "Quisque ut erat.", JobVisitTypeId = 2 },
                new JobVisit { JobId = 21, DateCreated = new DateTime(2017, 2, 4), VisitDate = new DateTime(2017, 2, 5), StartTime = new DateTime(2017, 2, 5, 16, 0, 0), EndTime = new DateTime(2017, 2, 5, 17, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 22, DateCreated = new DateTime(2017, 2, 6), VisitDate = new DateTime(2017, 2, 7), StartTime = new DateTime(2017, 2, 7, 14, 0, 0), EndTime = new DateTime(2017, 2, 7, 15, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 22, DateCreated = new DateTime(2017, 2, 12), VisitDate = new DateTime(2017, 2, 13), StartTime = new DateTime(2017, 2, 13, 10, 0, 0), EndTime = new DateTime(2017, 2, 13, 11, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 23, DateCreated = new DateTime(2017, 2, 8), VisitDate = new DateTime(2017, 2, 9), StartTime = new DateTime(2017, 2, 9, 13, 0, 0), EndTime = new DateTime(2017, 2, 9, 14, 0, 0), Notes = "", JobVisitTypeId = 1 },
                new JobVisit { JobId = 23, DateCreated = new DateTime(2017, 2, 15), VisitDate = new DateTime(2017, 2, 16), StartTime = new DateTime(2017, 2, 16, 12, 0, 0), EndTime = new DateTime(2017, 2, 16, 13, 0, 0), Notes = "", JobVisitTypeId = 2 },
                new JobVisit { JobId = 24, DateCreated = new DateTime(2017, 2, 10), VisitDate = new DateTime(2017, 2, 11), StartTime = new DateTime(2017, 2, 11, 14, 0, 0), EndTime = new DateTime(2017, 2, 11, 15, 0, 0), Notes = "Praesent blandit.", JobVisitTypeId = 1 }

            };

            foreach (JobVisit j in jobVisits)
            {
                context.JobVisits.Add(j);
            }

            context.SaveChanges();
        }
    }
}
